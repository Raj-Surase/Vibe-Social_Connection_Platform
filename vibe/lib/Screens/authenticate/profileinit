void _pickImage() {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return Align(
          alignment: Alignment.bottomCenter,
          child: StatefulBuilder(
            builder: (BuildContext context, StateSetter setState) {
              return Container(
                width: double.infinity,
                padding: const EdgeInsets.all(ValuesConstants.paddingLR),
                decoration: BoxDecoration(
                  color: AppColor.surfaceFG,
                  borderRadius: BorderRadius.vertical(
                      top: Radius.circular(ValuesConstants.radiusLarge)),
                ),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    GridView.builder(
                      shrinkWrap: true,
                      itemCount: _imageUrls.length,
                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                        crossAxisCount: 3,
                        mainAxisSpacing: ValuesConstants.paddingTB,
                        crossAxisSpacing: ValuesConstants.paddingTB,
                      ),
                      itemBuilder: (BuildContext context, int index) {
                        return GestureDetector(
                          onTap: () {
                            setState(() {
                              _selectedIndex = index;
                              _selectedImageUrl = _imageUrls[index];
                            });
                          },
                          child: Container(
                            padding: const EdgeInsets.all(8.0),
                            decoration: BoxDecoration(
                              shape: BoxShape.circle,
                              color: _selectedIndex == index
                                  ? AppColor.componentInactive.withOpacity(0.5)
                                  : AppColor.primaryButton,
                              image: DecorationImage(
                                  image: NetworkImage(_imageUrls)),
                            ),
                            child: Center(
                              child: _selectedIndex == index
                                  ? Icon(
                                      Icons.check_rounded,
                                      color: AppColor.componentActive,
                                      size: ValuesConstants.containerSmall,
                                    )
                                  : Image.network(_imageUrls[index]),
                            ),
                          ),
                        );
                      },
                    ),
                    const SizedBox(height: ValuesConstants.paddingLR),
                    SizedBox(
                      width: double.infinity,
                      child: ElevatedButton(
                        style: ButtonStyle(
                          backgroundColor:
                              WidgetStateProperty.all(AppColor.primaryButton),
                        ),
                        onPressed: () async {
                          if (_selectedImageUrl != null) {
                            await _firestore
                                .collection('users')
                                .doc(_auth.currentUser?.uid)
                                .update({
                              'profile_picture': _selectedImageUrl,
                            });
                            setState(() {
                              _image = null;
                            });
                          }
                          Navigator.of(context).pop();
                        },
                        child: Text(
                          'Select',
                          style: AppTypography.textStyle14Bold(
                              color: AppColor.textHighEm),
                        ),
                      ),
                    ),
                  ],
                ),
              );
            },
          ),
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Padding(
        padding: const EdgeInsets.fromLTRB(
            ValuesConstants.paddingLR,
            ValuesConstants.paddingTB,
            ValuesConstants.paddingLR,
            ValuesConstants.paddingTB),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              "Create your Profile",
              style: AppTypography.textStyle24Bold(color: AppColor.textHighEm),
            ),
            const SizedBox(
              height: ValuesConstants.paddingLR,
            ),
            GestureDetector(
              onTap: _pickImage,
              child: _selectedImageUrl == null
                  ? Container(
                      height: ValuesConstants.containerLarge,
                      width: ValuesConstants.containerLarge,
                      decoration: BoxDecoration(
                        borderRadius:
                            BorderRadius.circular(ValuesConstants.radiusCircle),
                        color: AppColor.surfaceFG,
                      ),
                      child: Center(
                          child: Text(
                        "Upload",
                        style: AppTypography.textStyle14Bold(
                            color: AppColor.textHighEm),
                      )),
                    )
                  : Container(
                      height: ValuesConstants.containerLarge,
                      width: ValuesConstants.containerLarge,
                      decoration: BoxDecoration(
                        shape: BoxShape.circle,
                        image: DecorationImage(
                          image: NetworkImage(_selectedImageUrl!),
                          fit: BoxFit.cover,
                        ),
                      ),
                    ),
            ),
            const SizedBox(
              height: ValuesConstants.containerMedium,
            ),
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  "Username",
                  style:
                      AppTypography.textStyle14Bold(color: AppColor.textHighEm),
                ),
                const SizedBox(
                  height: ValuesConstants.paddingSmall,
                ),
                AuthTextField(
                  hintText: "Username",
                  controller: usernameController,
                  isUsername: true,
                ),
              ],
            ),
            const SizedBox(
              height: ValuesConstants.paddingLR,
            ),
            SizedBox(
              width: ValuesConstants.screenWidth(context),
              height: ValuesConstants.containerSmallMedium,
              child: TextButton(
                onPressed: () {},
                style: ButtonStyle(
                  backgroundColor:
                      MaterialStateProperty.all(AppColor.primaryButton),
                ),
                child: Text(
                  'Continue',
                  style:
                      AppTypography.textStyle14Bold(color: AppColor.textHighEm),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
